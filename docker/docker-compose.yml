version: "1.0"

volumes:
  payment_command_data:
  payment_command_gradle_data:

networks:
  api_gateway_net:
    external: true
  command_database_net:
    external: true
  rabbitmq_net:
    external: true

services:
  payment_command_service:
    container_name: "payment-command-service"
    build:
      dockerfile: ./docker/Dockerfile
      context: ..
    ports:
      - ${PAYMENT_COMMAND_HOST_PORT}:${PAYMENT_COMMAND_CONTAINER_PORT}
    volumes:
      - payment_command_data:${PAYMENT_COMMAND_SERVICE_VOLUMES}
      - payment_command_gradle_data:${PAYMENT_COMMAND_GRADLE_VOLUMES}
    env_file:
      - .env
    restart: unless-stopped
    networks:
      - api_gateway_net
      - command_database_net
      - rabbitmq_net
    environment:
      SERVER_PORT: ${SERVER_PORT}
      SERVER_CONTEXT_PATH: ${SERVER_CONTEXT_PATH}
      APPLICATION_NAME: ${APPLICATION_NAME}
      HIBERNATE_DIALECT: ${HIBERNATE_DIALECT}
      HIBERNATE_NAMING: ${HIBERNATE_NAMING}
      DATASOURCE_DRIVER_CLASS_NAME: ${DATASOURCE_DRIVER_CLASS_NAME}
      DATASOURCE_URL: ${DATASOURCE_URL}
      DATASOURCE_USERNAME: ${DATASOURCE_USERNAME}
      DATASOURCE_PASSWORD: ${DATASOURCE_PASSWORD}
      RABBITMQ_USERNAME: ${RABBITMQ_USERNAME}
      RABBITMQ_PASSWORD: ${RABBITMQ_PASSWORD}
      RABBITMQ_VIRTUAL_HOST: ${RABBITMQ_VIRTUAL_HOST}
      RABBITMQ_HOST: ${RABBITMQ_HOST}
      RABBITMQ_PORT: ${RABBITMQ_PORT}
      RABBITMQ_IGNORE_DECLARATION_EXCEPTION: ${RABBITMQ_IGNORE_DECLARATION_EXCEPTION}
      RABBITMQ_CONCURRENT_CONSUMERS: ${RABBITMQ_CONCURRENT_CONSUMERS}
      RABBITMQ_MAX_CONCURRENT_CONSUMERS: ${RABBITMQ_MAX_CONCURRENT_CONSUMERS}
      RABBITMQ_RECEIVE_TIMEOUT: ${RABBITMQ_RECEIVE_TIMEOUT}
      MAIL_HOST: ${MAIL_HOST}
      MAIL_PORT: ${MAIL_PORT}
      MAIL_USERNAME: ${MAIL_USERNAME}
      MAIL_PASSWORD: ${MAIL_PASSWORD}
      MAIL_SMTP_AUTH: ${MAIL_SMTP_AUTH}
      MAIL_SMTP_STARTTLS_ENABLE: ${MAIL_SMTP_STARTTLS_ENABLE}
      MAIL_SMTP_SSL_TRUST: ${MAIL_SMTP_SSL_TRUST}
      MAIL_PROTOCOL: ${MAIL_PROTOCOL}
      MAIL_TEST_CONNECTION: ${MAIL_TEST_CONNECTION}
      TWILLIO_ACCOUNT_SID: ${TWILLIO_ACCOUNT_SID}
      TWILLIO_AUTH_TOKEN: ${TWILLIO_AUTH_TOKEN}
      TWILLIO_SENDER: ${TWILLIO_SENDER}
      MOMO_PARTNER_CODE: ${MOMO_PARTNER_CODE}
      MOMO_ACCESS_KEY: ${MOMO_ACCESS_KEY}
      MOMO_SECRET_KEY: ${MOMO_SECRET_KEY}
      MOMO_API: ${MOMO_API}
      MOMO_NOTIFY_URL: ${MOMO_NOTIFY_URL}
      THREAD_POOL_CORE_POOL_SIZE: ${THREAD_POOL_CORE_POOL_SIZE}
      THREAD_POOL_MAX_POOL_SIZE: ${THREAD_POOL_MAX_POOL_SIZE}
      THREAD_POOL_QUEUE_CAPACITY: ${THREAD_POOL_QUEUE_CAPACITY}
