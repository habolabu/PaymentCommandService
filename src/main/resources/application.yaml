# application config
server:
  port: ${SERVER_PORT}
  servlet:
    context-path: ${SERVER_CONTEXT_PATH}

# spring config
spring:
  application:
    name: ${APPLICATION_NAME}

  # hibernate config
  jpa:
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        dialect: ${HIBERNATE_DIALECT}
    hibernate:
      naming:
        physical-strategy: ${HIBERNANTE_NAMING}

  # datasource config
  datasource:
    driver-class-name: ${DATASOURCE_DRIVER_CLASS_NAME}
    url: ${DATASOURCE_URL}
    username: ${DATASOURCE_USERNAME}
    password: ${DATASOURCE_PASSWORD}

  # rabbitmq config
  rabbitmq:
    username: ${RABBITMQ_USERNAME}
    password: ${RABBITMQ_PASSWORD}
    virtual-host: ${RABBITMQ_VIRTUAL_HOST}
    host: ${RABBITMQ_HOST}
    port: ${RABBITMQ_PORT}
    ignoreDeclarationException: ${RABBITMQ_IGNORE_DECLARATION_EXCEPTION}
    concurrentConsumers: ${RABBITMQ_CONCURRENT_CONSUMERS}
    maxConcurrentConsumers: ${RABBITMQ_MAX_CONCURRENT_CONSUMERS}
    receiveTimeout: ${RABBITMQ_RECEIVE_TIMEOUT}

  # mail config
  mail:
    host: ${MAIL_HOST}
    port: ${MAIL_PORT}
    username: ${MAIL_USERNAME}
    password: ${MAIL_PASSWORD}
    properties.mail.smtp:
      auth: ${MAIL_SMTP_AUTH}
      starttls.enable: ${MAIL_SMTP_STARTTLS_ENABLE}
      ssl.trust: ${MAIL_SMTP_SSL_TRUST}
    protocol: ${MAIL_PROTOCOL}
    test-connection: ${MAIL_TEST_CONNECTION}

  # twilio config
  twilio:
    accountSID: ${TWILLIO_ACCOUNT_SID}
    authToken: ${TWILLIO_AUTH_TOKEN}
    sender: ${TWILLIO_SENDER}

  # momo config
  momo:
    partnerCode: ${MOMO_PARTNER_CODE}
    accessKey: ${MOMO_ACCESS_KEY}
    secretKey: ${MOMO_SECRET_KEY}
    api: ${MOMO_API}
    notifyURL: ${MOMO_NOTIFY_URL}

  # thread pool config
  threadPool:
    corePoolSize: ${THREAD_POOL_CORE_POOL_SIZE}
    maxPoolSize: ${THREAD_POOL_MAX_POOL_SIZE}
    queueCapacity: ${THREAD_POOL_QUEUE_CAPACITY}